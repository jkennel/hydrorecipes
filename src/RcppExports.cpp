// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// check_lag
int check_lag(int n, int lag, int n_shift);
RcppExport SEXP _hydrorecipes_check_lag(SEXP nSEXP, SEXP lagSEXP, SEXP n_shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< int >::type n_shift(n_shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(check_lag(n, lag, n_shift));
    return rcpp_result_gen;
END_RCPP
}
// get_length
int get_length(int n, int n_subset);
RcppExport SEXP _hydrorecipes_get_length(SEXP nSEXP, SEXP n_subsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    rcpp_result_gen = Rcpp::wrap(get_length(n, n_subset));
    return rcpp_result_gen;
END_RCPP
}
// get_start
int get_start(int n_out, int lag, int n_subset);
RcppExport SEXP _hydrorecipes_get_start(SEXP n_outSEXP, SEXP lagSEXP, SEXP n_subsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_out(n_outSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    rcpp_result_gen = Rcpp::wrap(get_start(n_out, lag, n_subset));
    return rcpp_result_gen;
END_RCPP
}
// get_end
int get_end(int n, int n_out, int lag, int n_subset);
RcppExport SEXP _hydrorecipes_get_end(SEXP nSEXP, SEXP n_outSEXP, SEXP lagSEXP, SEXP n_subsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_out(n_outSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    rcpp_result_gen = Rcpp::wrap(get_end(n, n_out, lag, n_subset));
    return rcpp_result_gen;
END_RCPP
}
// shift_subset
NumericVector shift_subset(const NumericVector& x, int lag, int n_subset, int n_shift);
RcppExport SEXP _hydrorecipes_shift_subset(SEXP xSEXP, SEXP lagSEXP, SEXP n_subsetSEXP, SEXP n_shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    Rcpp::traits::input_parameter< int >::type n_shift(n_shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(shift_subset(x, lag, n_subset, n_shift));
    return rcpp_result_gen;
END_RCPP
}
// lag_matrix
Rcpp::NumericMatrix lag_matrix(const Rcpp::NumericMatrix& x, const Rcpp::IntegerVector& lags, Rcpp::CharacterVector suffix, std::string prefix, int n_subset, int n_shift);
RcppExport SEXP _hydrorecipes_lag_matrix(SEXP xSEXP, SEXP lagsSEXP, SEXP suffixSEXP, SEXP prefixSEXP, SEXP n_subsetSEXP, SEXP n_shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type suffix(suffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type prefix(prefixSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    Rcpp::traits::input_parameter< int >::type n_shift(n_shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(lag_matrix(x, lags, suffix, prefix, n_subset, n_shift));
    return rcpp_result_gen;
END_RCPP
}
// distributed_lag_parallel
Eigen::MatrixXd distributed_lag_parallel(const Eigen::VectorXd& x, const Eigen::MatrixXd& bl, int lag_max, int n_subset, int n_shift);
RcppExport SEXP _hydrorecipes_distributed_lag_parallel(SEXP xSEXP, SEXP blSEXP, SEXP lag_maxSEXP, SEXP n_subsetSEXP, SEXP n_shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type bl(blSEXP);
    Rcpp::traits::input_parameter< int >::type lag_max(lag_maxSEXP);
    Rcpp::traits::input_parameter< int >::type n_subset(n_subsetSEXP);
    Rcpp::traits::input_parameter< int >::type n_shift(n_shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(distributed_lag_parallel(x, bl, lag_max, n_subset, n_shift));
    return rcpp_result_gen;
END_RCPP
}
// to_dummy
IntegerMatrix to_dummy(IntegerVector x, size_t n_fact);
RcppExport SEXP _hydrorecipes_to_dummy(SEXP xSEXP, SEXP n_factSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_fact(n_factSEXP);
    rcpp_result_gen = Rcpp::wrap(to_dummy(x, n_fact));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hydrorecipes_check_lag", (DL_FUNC) &_hydrorecipes_check_lag, 3},
    {"_hydrorecipes_get_length", (DL_FUNC) &_hydrorecipes_get_length, 2},
    {"_hydrorecipes_get_start", (DL_FUNC) &_hydrorecipes_get_start, 3},
    {"_hydrorecipes_get_end", (DL_FUNC) &_hydrorecipes_get_end, 4},
    {"_hydrorecipes_shift_subset", (DL_FUNC) &_hydrorecipes_shift_subset, 4},
    {"_hydrorecipes_lag_matrix", (DL_FUNC) &_hydrorecipes_lag_matrix, 6},
    {"_hydrorecipes_distributed_lag_parallel", (DL_FUNC) &_hydrorecipes_distributed_lag_parallel, 5},
    {"_hydrorecipes_to_dummy", (DL_FUNC) &_hydrorecipes_to_dummy, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_hydrorecipes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
